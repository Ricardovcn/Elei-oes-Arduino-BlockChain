'''
    Este script deve ser executato logo após o ganache-cli ser executado.
    Se o ganache-cli for parado e iniciado novamente, este script deverá
    ser executado novamente.
'''


import json
from web3 import Web3
#from solc import compile_files, link_code, compile_standard, compile_source

w3 = Web3(Web3.HTTPProvider("http://127.0.0.1:8545"))

BYTECODE = '608060405234801561001057600080fd5b506040805180820190915260208082527f633337663333343035363765333333663036616534303966623966616133353391810191825261005391600091610059565b506100f4565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061009a57805160ff19168380011785556100c7565b828001600101855582156100c7579182015b828111156100c75782518255916020019190600101906100ac565b506100d39291506100d7565b5090565b6100f191905b808211156100d357600081556001016100dd565b90565b610911806101036000396000f3006080604052600436106100775763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166311196c8d811461007c578063290bb453146101e65780635d8804f41461024157806364d2e0e41461031b5780639749e83714610347578063cc8e2394146103ac575b600080fd5b34801561008857600080fd5b50610094600435610436565b60405180868152602001806020018060200180602001858152602001848103845288818151815260200191508051906020019080838360005b838110156100e55781810151838201526020016100cd565b50505050905090810190601f1680156101125780820380516001836020036101000a031916815260200191505b50848103835287518152875160209182019189019080838360005b8381101561014557818101518382015260200161012d565b50505050905090810190601f1680156101725780820380516001836020036101000a031916815260200191505b50848103825286518152865160209182019188019080838360005b838110156101a557818101518382015260200161018d565b50505050905090810190601f1680156101d25780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b3480156101f257600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261023f94369492936024939284019190819084018382808284375094975061063f9650505050505050565b005b34801561024d57600080fd5b5060408051602060046024803582810135601f810185900485028601850190965285855261023f95833595369560449491939091019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506106569650505050505050565b34801561032757600080fd5b5061033360043561072c565b604080519115158252519081900360200190f35b34801561035357600080fd5b5061035c610767565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610398578181015183820152602001610380565b505050509050019250505060405180910390f35b3480156103b857600080fd5b506103c16107c0565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103fb5781810151838201526020016103e3565b50505050905090810190601f1680156104285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6000818152600160205260408120546060908190819084908690821061045b57600080fd5b600087815260016020818152604092839020600481015481840180548651600260001997831615610100028801909216829004601f81018790048702820187019098528781528e9792969185019560039095019491909301929186918301828280156105085780601f106104dd57610100808354040283529160200191610508565b820191906000526020600020905b8154815290600101906020018083116104eb57829003601f168201915b5050865460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959950889450925084019050828280156105965780601f1061056b57610100808354040283529160200191610596565b820191906000526020600020905b81548152906001019060200180831161057957829003601f168201915b5050855460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959850879450925084019050828280156106245780601f106105f957610100808354040283529160200191610624565b820191906000526020600020905b81548152906001019060200180831161060757829003601f168201915b50505050509150955095509550955095505091939590929450565b805161065290600090602084019061084d565b5050565b6040805160a0810182528581526020808201868152828401869052606083018590526001608084018190526000898152818452949094208351815590518051939491936106ab9392850192919091019061084d565b50604082015180516106c791600284019160209091019061084d565b50606082015180516106e391600384019160209091019061084d565b50608091909101516004909101555050600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace019190915550565b6000818152600160205260408120548290821061074857600080fd5b5050600090815260016020819052604090912060040180548201905590565b606060028054806020026020016040519081016040528092919081815260200182805480156107b557602002820191906000526020600020905b8154815260200190600101908083116107a1575b505050505090505b90565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107b55780601f10610821576101008083540402835291602001916107b5565b820191906000526020600020905b81548152906001019060200180831161082f57509395945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061088e57805160ff19168380011785556108bb565b828001600101855582156108bb579182015b828111156108bb5782518255916020019190600101906108a0565b506108c79291506108cb565b5090565b6107bd91905b808211156108c757600081556001016108d15600a165627a7a72305820d3d25281248c6efab57a1e8d4f7f068719913df4011ba74e6f073e2614ece9bf0029'
ABI = [ { "constant": False, "inputs": [ { "name": "_numero", "type": "uint256" }, { "name": "_path_foto", "type": "string" }, { "name": "_nome", "type": "string" }, { "name": "_partido", "type": "string" } ], "name": "adicionarCandidato", "outputs": [], "payable": False, "stateMutability": "nonpayable", "type": "function" }, { "constant": False, "inputs": [ { "name": "_password", "type": "string" } ], "name": "setPassword", "outputs": [], "payable": False, "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "payable": False, "stateMutability": "nonpayable", "type": "constructor" }, { "constant": False, "inputs": [ { "name": "_numero", "type": "uint256" } ], "name": "votarCandidato", "outputs": [ { "name": "", "type": "bool" } ], "payable": False, "stateMutability": "nonpayable", "type": "function" }, { "constant": True, "inputs": [ { "name": "_numero", "type": "uint256" } ], "name": "getCandidato", "outputs": [ { "name": "", "type": "uint256" }, { "name": "", "type": "string" }, { "name": "", "type": "string" }, { "name": "", "type": "string" }, { "name": "", "type": "uint256" } ], "payable": False, "stateMutability": "view", "type": "function" }, { "constant": True, "inputs": [], "name": "getNumerosDosCandidatos", "outputs": [ { "name": "", "type": "uint256[]" } ], "payable": False, "stateMutability": "view", "type": "function" }, { "constant": True, "inputs": [], "name": "getPassword", "outputs": [ { "name": "", "type": "string" } ], "payable": False, "stateMutability": "view", "type": "function" } ]


def deploy_contract():
    # Instantiate and deploy contract
    contract = w3.eth.contract(
        abi=ABI,
        bytecode=BYTECODE
    )

    # Get transaction hash from deployed contract
    tx_hash = contract.deploy(transaction={'from':w3.eth.accounts[1]})

    # Get tx receipt to get contract address
    tx_receipt = w3.eth.getTransactionReceipt(tx_hash)
    return tx_receipt['contractAddress']


# Adiciona o ABI (Application Binary Interface) e o 
# endereço do contrato no arquivo json
with open('./data.json', 'w') as outfile:
    data = {
        "abi": ABI,
        "contract_address": deploy_contract()
    }
    json.dump(data, outfile, indent=4, sort_keys=True)